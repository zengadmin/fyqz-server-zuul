spring:
  application:
    name: fyqz-server-zuul
  #服务监控
  boot:
    admin:
      client:
        url: http://localhost:8080
        username: fyqz
        password: 123456
  security:
    user:
      name: fyqz
      password: 123456

eureka:
  instance:
    hostname: localhost # 服务提供者应用所在的主机（本地测试的话，使用localhost或者127.0.0.1即可，或者在host文件中指定一个虚拟域名也可以）
    lease-renewal-interval-in-seconds: 5 # 心跳时间，表示eureka client发送心跳给eureka server端的频率（缺省为30s）
  client:
    service-url:
      defaultZone: http://${spring.security.user.name}:${spring.security.user.password}@127.0.0.1:18761/eureka,http://${spring.security.user.name}:${spring.security.user.password}@root:root@127.0.0.1:28761/eureka # 指定eureka服务器集群列表地址

# API网关配置
zuul:
  routes:
    fyqz-service-chess:
      path: /api-chess/** # /api-chess开头的请求，全部转发到fyqz-service-chess服务中去
      service-id: fyqz-server-chess # 应用名称
    fyqz-service-user:
      path: /api-user/** # /api-user开头的请求，全部转发到 fyqz-service-user服务中去
      service-id: fyqz-server-user # 应用名称
    fyqz-service-scenario:
      path: /api-scenario/** # /api-scenario开头的请求，全部转发到 fyqz-service-user服务中去
      service-id: fyqz-server-scenario # 应用名称



# 需要设置timeoutInMilliseconds属性，不然的话，hystrix断路器不起作用，页面就会报错（如果配置了timeoutInMilliseconds属性，则会执行我们的断路器回调方法）；同时，值的大小也是有讲究的，一般设置要 >= ribbon的超时时间值
hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 5000 # 设置API网关路由转发请求的HystrixCommand执行超时时间，单位为毫秒（默认值1000）。断路器的超时时间大于ribbon的超时时间，才会触发重试

management:
  security:
    enabled: false # 关闭安全验证（或者设置用户名和密码）。客户端访问一些接口的时候，才不会出现：401 Unauthorized权限的错误 ——
  endpoints:
    web:
      exposure:
        include: "*"   #暴露所有的端点我们可以看到更多的服务实例相关信息，
  endpoint:
      show-details: ALWAYS   #health endpoint是否必须显示全部细节

fyqz:
  jwt:
    # 加密秘钥
    secret: f4e2e52034348f86b67cde581c0f9eb5[www.fyqz.com]
    # token有效时长，7天，单位秒
    expire: 604800
  ignorePath: api-docs,userLogin